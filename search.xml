<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Linux、Shell介绍</title>
    <url>/Linux%E3%80%81Shell%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="Linux介绍"><a href="#Linux介绍" class="headerlink" title="Linux介绍"></a>Linux介绍</h2><p>说到服务器，那就要聊聊它的操作系统——Liunx了，Linux是一种自由和开放源码的类UNIX操作系统，它是在1991年由Linus Benedict Torvalds（林纳斯）在赫尔辛基大学上学时创立的。Linux是一个基于POXIS的多用户、多任务、支持多线程和多CPU的操作系统，具有性能高、安全等特性，常被运维人员用来当作服务器使用。</p>
<p>它有一个基本思想：一切都是文件</p>
<span id="more"></span>

<h2 id="Linux基本操作"><a href="#Linux基本操作" class="headerlink" title="Linux基本操作"></a>Linux基本操作</h2><h5 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h5><p>展示当前目录下的文件</p>
<h5 id="cd-path"><a href="#cd-path" class="headerlink" title="cd [path]"></a>cd [path]</h5><p>切换到指定目录，其中cd ..为上一级</p>
<h5 id="touch-path-x2F-filename"><a href="#touch-path-x2F-filename" class="headerlink" title="touch [path&#x2F;filename]"></a>touch [path&#x2F;filename]</h5><p>创建文件</p>
<h5 id="vi-x2F-vim-path-x2F-filename"><a href="#vi-x2F-vim-path-x2F-filename" class="headerlink" title="vi&#x2F;vim [path&#x2F;filename]"></a>vi&#x2F;vim [path&#x2F;filename]</h5><p>编辑文件，操作可以参考以下图片</p>
<p><img data-src="https://ftp.bmp.ovh/imgs/2020/10/e0d5328c1ad10217.gif"></p>
<h5 id="rm-path-x2F-filename"><a href="#rm-path-x2F-filename" class="headerlink" title="rm [path&#x2F;filename]"></a>rm [path&#x2F;filename]</h5><p>删除文件</p>
<h5 id="yum-software"><a href="#yum-software" class="headerlink" title="yum [software]"></a>yum [software]</h5><p>安装软件包</p>
<h2 id="Shell介绍"><a href="#Shell介绍" class="headerlink" title="Shell介绍"></a>Shell介绍</h2><p>shell是一个用C语言编写的程序，它是用户使用Linux的桥梁。shell既是一种命令语言，也是一种程序设计语言。</p>
<h2 id="Shell脚本"><a href="#Shell脚本" class="headerlink" title="Shell脚本"></a>Shell脚本</h2><p>Shell脚本（shell script），是一种为Shell编写的脚本语言。</p>
<h2 id="往期文章"><a href="#往期文章" class="headerlink" title="往期文章"></a>往期文章</h2><p><strong><a href="/Linux%E3%80%81Shell%E4%BB%8B%E7%BB%8D/" title="Linux、Shell介绍">Linux、Shell介绍</a></strong></p>
<p><strong><a href="/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" title="开发环境配置">开发环境配置</a></strong></p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.runoob.com/linux/linux-tutorial.html">Linux教程</a></p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>玩转服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>STL容器-set</title>
    <url>/STL%E5%AE%B9%E5%99%A8-set/</url>
    <content><![CDATA[<h2 id="set介绍"><a href="#set介绍" class="headerlink" title="set介绍"></a>set介绍</h2><p><strong><a href="http://c.biancheng.net/view/7192.html">参考链接</a></strong></p>
<p>set是STL中的一种关联容器，它的底层是红黑树，也称为RB树(Red-Black Tree)，同样底层采用了红黑树的容器还有multiset, map, multimap。它是用来存储同一数据类型的数据类型，并且能从一个数据集合中取出数据，在set中每个元素的值都唯一，而且能根据元素的值自动进行排序(默认升序)。</p>
<span id="more"></span>

<h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">set&lt;<span class="type">int</span>&gt;sc;<span class="comment">//定义</span></span><br><span class="line">sc.<span class="built_in">insert</span>(<span class="number">8</span>);</span><br><span class="line">sc.<span class="built_in">insert</span>(<span class="number">3</span>);</span><br><span class="line">sc.<span class="built_in">insert</span>(<span class="number">4</span>);</span><br><span class="line">sc.<span class="built_in">insert</span>(<span class="number">2</span>);</span><br><span class="line">sc.<span class="built_in">insert</span>(<span class="number">1</span>);<span class="comment">//插入指定元素</span></span><br><span class="line">sc.<span class="built_in">begin</span>();<span class="comment">//指向sc第一个元素的迭代器</span></span><br><span class="line">sc.<span class="built_in">end</span>();<span class="comment">//指向sc最后一个元素之后的迭代器</span></span><br><span class="line">sc.<span class="built_in">erase</span>(<span class="number">1</span>);<span class="comment">//删除指定元素，删除成功返回1，否则返回0</span></span><br><span class="line">sc.<span class="built_in">empty</span>();<span class="comment">//判断是否为空，为空返回1，否则返回0</span></span><br><span class="line">sc.<span class="built_in">find</span>(<span class="number">1</span>)<span class="comment">//查找1这个元素，找到返回此元素迭代器，没有找到返回myset.end()</span></span><br><span class="line">sc.<span class="built_in">size</span>();<span class="comment">//返回sc的元素个数</span></span><br><span class="line">sc.<span class="built_in">count</span>(<span class="number">1</span>)<span class="comment">//对1进行计数，存在返回1，不存在返回0</span></span><br><span class="line"><span class="comment">//set的遍历</span></span><br><span class="line"><span class="keyword">for</span>(set&lt;<span class="type">int</span>&gt;::iterator it=sc.<span class="built_in">begin</span>();it!=sc.<span class="built_in">end</span>();it++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*it);</span><br><span class="line"></span><br><span class="line">sc.<span class="built_in">lower_bound</span>(<span class="number">1</span>)<span class="comment">//寻找第一个大于等于1的元素，返回此元素迭代器，未找到返回sc.end()</span></span><br><span class="line">sc.<span class="built_in">upper_bound</span>(<span class="number">1</span>)<span class="comment">//寻找第一个大于1的元素，返回此元素迭代器，未找到返回sc.end()</span></span><br></pre></td></tr></table></figure>

<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	set&lt;<span class="type">int</span>&gt; sc;</span><br><span class="line">	sc.<span class="built_in">insert</span>(<span class="number">1</span>);</span><br><span class="line">	sc.<span class="built_in">insert</span>(<span class="number">8</span>);</span><br><span class="line">	sc.<span class="built_in">insert</span>(<span class="number">3</span>);</span><br><span class="line">	sc.<span class="built_in">insert</span>(<span class="number">4</span>);</span><br><span class="line">	sc.<span class="built_in">insert</span>(<span class="number">2</span>);</span><br><span class="line">	sc.<span class="built_in">erase</span>(<span class="number">3</span>);</span><br><span class="line">	<span class="keyword">for</span>(set&lt;<span class="type">int</span>&gt;::iterator it=sc.<span class="built_in">begin</span>();it!=sc.<span class="built_in">end</span>();it++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*it);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	sc.<span class="built_in">erase</span>(*sc.<span class="built_in">lower_bound</span>(<span class="number">4</span>));</span><br><span class="line">	<span class="keyword">for</span>(set&lt;<span class="type">int</span>&gt;::iterator it=sc.<span class="built_in">begin</span>();it!=sc.<span class="built_in">end</span>();it++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*it);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1248</span><br><span class="line">128</span><br></pre></td></tr></table></figure>

<h2 id="练习题目"><a href="#练习题目" class="headerlink" title="练习题目"></a>练习题目</h2><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805070149828608">集合相似度</a></strong></p>
<p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805063166312448">列车调度</a></strong></p>
<h2 id="往期文章"><a href="#往期文章" class="headerlink" title="往期文章"></a>往期文章</h2><p><strong><a href="/STL%E5%AE%B9%E5%99%A8-set/" title="STL容器-set">STL容器-set</a></strong></p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>数据结构</category>
        <category>STL</category>
        <category>set</category>
      </categories>
      <tags>
        <tag>STL</tag>
        <tag>set</tag>
      </tags>
  </entry>
  <entry>
    <title>添加SSH公钥</title>
    <url>/%E6%B7%BB%E5%8A%A0SSH%E5%85%AC%E9%92%A5/</url>
    <content><![CDATA[<p>最近想要无密码登陆linux服务器，故记录步骤如下：</p>
<p>1、在windows系统的cmd命令行上执行生成密钥对命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>

<p>2、将生成的id_rsa.pub公钥内容复制到远程服务器上的&#x2F;.ssh&#x2F;authorized_keys(不存在则手动创建)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">touch /.ssh/authorized_keys #文件不存在时手动创建</span><br><span class="line">vim /.ssh/authorized_keys #编辑authorized_keys文件</span><br></pre></td></tr></table></figure>

<p>3、导入密钥，打开xshell-&gt;工具-&gt;用户密钥管理者-&gt;导入选项，导入刚刚生成的id_rsa密钥文件</p>
<p>4、登录服务器，选择密钥登录并选择刚刚导入成功的密钥文件，即可完成无密码登录。</p>
<p>5、（可选）取消密码登录，加强服务器安全性。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config #编辑ssh配置文件</span><br><span class="line"><span class="meta">#</span><span class="language-bash">将PasswordAuthentication处的值改为no</span></span><br><span class="line">service sshd restart #重启ssh服务</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>专栏</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>无密码登录</tag>
      </tags>
  </entry>
  <entry>
    <title>天梯训练赛(1.28~2.03)</title>
    <url>/%E5%A4%A9%E6%A2%AF%E8%AE%AD%E7%BB%83%E8%B5%9B(1.28~2.03)/</url>
    <content><![CDATA[<h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p>getchar函数以及atio函数的用法、结构体数组的初始化、set容器的使用</p>
<span id="more"></span>

<h3 id="输出GPLT"><a href="#输出GPLT" class="headerlink" title="输出GPLT"></a><strong>输出GPLT</strong></h3><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805113036587008">原题链接</a></strong></p>
<p>给定一个长度不超过10000的、仅由英文字母构成的字符串。请将字符重新调整顺序，按<code>GPLTGPLT....</code>这样的顺序输出，并忽略其它字符。当然，四种字符（不区分大小写）的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按<code>GPLT</code>的顺序打印，直到所有字符都被输出。</p>
<h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入在一行中给出一个长度不超过10000的、仅由英文字母构成的非空字符串。</p>
<h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>在一行中按题目要求输出排序后的字符串。题目保证输出非空。</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pcTclnGloRgLrtLhgljkLhGFauPewSKgt</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GPLTGPLTGLTGLGLL</span><br></pre></td></tr></table></figure>

<h4 id="个人解题思路："><a href="#个人解题思路：" class="headerlink" title="个人解题思路："></a>个人解题思路：</h4><p>4种字符的数量需要保存下来，在这里我用了结构体来记住字符数量，不过相比网上的方法有点麻烦.PS:就当复习了结构体的知识吧</p>
<p>需要注意的是结构体数组的初始化</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">CODE code[<span class="number">4</span>]=&#123;&#123;<span class="number">0</span>,<span class="string">&#x27;G&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;P&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;L&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;T&#x27;</span>&#125;&#125;;</span><br></pre></td></tr></table></figure>

<p>AC代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">CODE</span>&#123;<span class="comment">//定义一个字符结构体</span></span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="type">char</span> ch;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> a[<span class="number">10001</span>];</span><br><span class="line">	CODE code[<span class="number">4</span>]=&#123;&#123;<span class="number">0</span>,<span class="string">&#x27;G&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;P&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;L&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;T&#x27;</span>&#125;&#125;;<span class="comment">//定义结构体并初始化</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;a[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)<span class="comment">//遍历字符串</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)<span class="comment">//每一个字符都要与PGLT(还有小写)进行比较</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]==code[j].ch||a[i]<span class="number">-32</span>==code[j].ch)</span><br><span class="line">			&#123;</span><br><span class="line">				code[j].count++;<span class="comment">//对应字符数量增加1</span></span><br><span class="line">				<span class="keyword">break</span>;<span class="comment">//因为已经判断相等了,所以没必要继续比较,直接结束循环</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(code[<span class="number">0</span>].count==<span class="number">0</span>&amp;&amp;code[<span class="number">1</span>].count==<span class="number">0</span>&amp;&amp;code[<span class="number">2</span>].count==<span class="number">0</span>&amp;&amp;code[<span class="number">3</span>].count==<span class="number">0</span>)</span><br><span class="line">			<span class="keyword">break</span>;<span class="comment">//只有当4种字符的数量为0时循环结束</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)<span class="comment">//遍历4种字符</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(code[i].count!=<span class="number">0</span>)&#123;<span class="comment">//前提:字符数量不能为0</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,code[i].ch);</span><br><span class="line">				code[i].count--;<span class="comment">//记得数量减1</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="网上解题思路"><a href="#网上解题思路" class="headerlink" title="网上解题思路"></a>网上解题思路</h4><p>网上的方法比较好理解:用4个变量临时存储这四种字符的个数，每次输出字符时对应变量减1。</p>
<p>AC代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> a[<span class="number">10001</span>];</span><br><span class="line">	<span class="type">int</span> p,g,l,t;<span class="comment">//定义4种字符数量</span></span><br><span class="line">	p=g=l=t=<span class="number">0</span>;<span class="comment">//初始化0</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;a[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)<span class="comment">//遍历字符串</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i]==<span class="string">&#x27;g&#x27;</span>||a[i]==<span class="string">&#x27;G&#x27;</span>)g++;<span class="comment">//比较对应字符,数量增加1</span></span><br><span class="line">		<span class="keyword">if</span>(a[i]==<span class="string">&#x27;p&#x27;</span>||a[i]==<span class="string">&#x27;P&#x27;</span>)p++;</span><br><span class="line">		<span class="keyword">if</span>(a[i]==<span class="string">&#x27;l&#x27;</span>||a[i]==<span class="string">&#x27;L&#x27;</span>)l++;</span><br><span class="line">		<span class="keyword">if</span>(a[i]==<span class="string">&#x27;t&#x27;</span>||a[i]==<span class="string">&#x27;T&#x27;</span>)t++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(p!=<span class="number">0</span>||g!=<span class="number">0</span>||l!=<span class="number">0</span>||t!=<span class="number">0</span>)&#123;<span class="comment">//只有当所有字符数量为0时推出循环</span></span><br><span class="line">		<span class="keyword">if</span>(g)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;G&quot;</span>);</span><br><span class="line">			g--;<span class="comment">//记得减1</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(p)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;P&quot;</span>);</span><br><span class="line">			p--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(l)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;L&quot;</span>);</span><br><span class="line">			l--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(t)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;T&quot;</span>);</span><br><span class="line">			t--;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="正整数A-B"><a href="#正整数A-B" class="headerlink" title="正整数A+B"></a><strong>正整数A+B</strong></h3><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805110318678016">原题链接</a></strong></p>
<p>题的目标很简单，就是求两个正整数<code>A</code>和<code>B</code>的和，其中<code>A</code>和<code>B</code>都在区间[1,1000]。稍微有点麻烦的是，输入并不保证是两个正整数。</p>
<h4 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入在一行给出<code>A</code>和<code>B</code>，其间以空格分开。问题是<code>A</code>和<code>B</code>不一定是满足要求的正整数，有时候可能是超出范围的数字、负数、带小数点的实数、甚至是一堆乱码。</p>
<p>注意：我们把输入中出现的第1个空格认为是<code>A</code>和<code>B</code>的分隔。题目保证至少存在一个空格，并且<code>B</code>不是一个空字符串。</p>
<h4 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h4><p>如果输入的确是两个正整数，则按格式<code>A + B = 和</code>输出。如果某个输入不合要求，则在相应位置输出<code>?</code>，显然此时和也是<code>?</code>。</p>
<h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123 456</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123 + 456 = 579</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">22. 18</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">? + 18 = ?</span><br></pre></td></tr></table></figure>

<h4 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-100 blabla bla...33</span><br></pre></td></tr></table></figure>

<h4 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">? + ? = ?</span><br></pre></td></tr></table></figure>

<h4 id="个人解题思路"><a href="#个人解题思路" class="headerlink" title="个人解题思路:"></a>个人解题思路:</h4><p>分别输入这两个字符串,分别对其判断是否为[1,1000]的正整数,并判断输出</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> a[<span class="number">10</span>],b[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>,a,b);</span><br></pre></td></tr></table></figure>

<p>但这里有个bug,当输入的字符b中有空格的话,输入就会结束,这里应当用getchar()函数来判断下一个字符是空格结束输入还是换行结束输入.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">if</span>(c!=<span class="string">&#x27;\n&#x27;</span>)<span class="comment">//不是换行导致结束输入的,应分情况</span></span><br></pre></td></tr></table></figure>

<p>AC代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">jude</span><span class="params">(<span class="type">char</span> ch[])</span><span class="comment">//判断函数是否符合[1,1000]的正整数的条件,符合返回1,不符合返回0</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;ch[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(ch[i]&lt;<span class="string">&#x27;0&#x27;</span>||ch[i]&gt;<span class="string">&#x27;9&#x27;</span>)<span class="comment">//判断正整数</span></span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;<span class="number">4</span>)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//位数不符合的情况</span></span><br><span class="line">	<span class="keyword">if</span>(i==<span class="number">1</span>&amp;&amp;ch[<span class="number">0</span>]==<span class="string">&#x27;0&#x27;</span>)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//只有1位数时不符合的情况</span></span><br><span class="line">	<span class="keyword">if</span>(i==<span class="number">4</span>)<span class="comment">//4位数时不符合的情况</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(ch[<span class="number">0</span>]!=<span class="string">&#x27;1&#x27;</span>||ch[<span class="number">1</span>]!=<span class="string">&#x27;0&#x27;</span>||ch[<span class="number">2</span>]!=<span class="string">&#x27;0&#x27;</span>||ch[<span class="number">3</span>]!=<span class="string">&#x27;0&#x27;</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> a[<span class="number">10</span>],b[<span class="number">10</span>];</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>,a,b);</span><br><span class="line">	<span class="type">char</span> c = <span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">jude</span>(a)==<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">jude</span>(b)==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;? + ? = ?&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;? + %s = ?&quot;</span>,b);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">jude</span>(b)==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%s + ? = ?&quot;</span>,a);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(c!=<span class="string">&#x27;\n&#x27;</span>)<span class="comment">//如果不是换行结束输入的代表B字符有问题</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%s + ? = ?&quot;</span>,a);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%s + %s = %d&quot;</span>,a,b,<span class="built_in">atoi</span>(a)+<span class="built_in">atoi</span>(b));<span class="comment">//atoi()字符串转整型函数</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="网上解题思路-1"><a href="#网上解题思路-1" class="headerlink" title="网上解题思路"></a>网上解题思路</h4><p>AC代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> c;</span><br><span class="line">	<span class="type">int</span> fa=<span class="number">0</span>,fb=<span class="number">0</span>;<span class="comment">//符合情况变量,默认符合</span></span><br><span class="line">	<span class="type">int</span> sum1=<span class="number">0</span>,sum2=<span class="number">0</span>;<span class="comment">//和</span></span><br><span class="line">	<span class="keyword">while</span>((c=<span class="built_in">getchar</span>())!=EOF&amp;&amp;c!=<span class="string">&#x27; &#x27;</span>)&#123;<span class="comment">//getchar()获取输入字符的一个,空格或换行结束循环</span></span><br><span class="line">		<span class="keyword">if</span>(c&lt;<span class="string">&#x27;0&#x27;</span>||c&gt;<span class="string">&#x27;9&#x27;</span>)fa=<span class="number">1</span>;<span class="comment">//非正整数</span></span><br><span class="line">		sum1*=<span class="number">10</span>;<span class="comment">//位数加1时,要扩大10倍</span></span><br><span class="line">		sum1+=c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(sum1&gt;<span class="number">1000</span>||sum1&lt;<span class="number">1</span>)fa=<span class="number">1</span>;<span class="comment">//位数不符合</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>((c=<span class="built_in">getchar</span>())!=EOF&amp;&amp;c!=<span class="string">&#x27;\n&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(c&lt;<span class="string">&#x27;0&#x27;</span>||c&gt;<span class="string">&#x27;9&#x27;</span>)fb=<span class="number">1</span>;</span><br><span class="line">		sum2*=<span class="number">10</span>;</span><br><span class="line">		sum2+=c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(sum2&gt;<span class="number">1000</span>||sum2&lt;<span class="number">1</span>)fb=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(fa==<span class="number">0</span>&amp;&amp;fb==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d + %d = %d&quot;</span>,sum1,sum2,sum1+sum2);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(fa==<span class="number">0</span>&amp;&amp;fb==<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d + ? = ?&quot;</span>,sum1);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(fa==<span class="number">1</span>&amp;&amp;fb==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;? + %d = ?&quot;</span>,sum2);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(fa==<span class="number">1</span>&amp;&amp;fb==<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">&quot;? + ? = ?&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="一帮一"><a href="#一帮一" class="headerlink" title="一帮一"></a><strong>一帮一</strong></h3><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805103557459968">原题链接</a></strong></p>
<p>“一帮一学习小组”是中小学中常见的学习组织方式，老师把学习成绩靠前的学生跟学习成绩靠后的学生排在一组。本题就请你编写程序帮助老师自动完成这个分配工作，即在得到全班学生的排名后，在当前尚未分组的学生中，将名次最靠前的学生与名次最靠后的<strong>异性</strong>学生分为一组。</p>
<h4 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入第一行给出正偶数<code>N</code>（≤50），即全班学生的人数。此后<code>N</code>行，按照名次从高到低的顺序给出每个学生的性别（0代表女生，1代表男生）和姓名（不超过8个英文字母的非空字符串），其间以1个空格分隔。这里保证本班男女比例是1:1，并且没有并列名次。</p>
<h4 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a>输出格式：</h4><p>每行输出一组两个学生的姓名，其间以1个空格分隔。名次高的学生在前，名次低的学生在后。小组的输出顺序按照前面学生的名次从高到低排列。</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">0 Amy</span><br><span class="line">1 Tom</span><br><span class="line">1 Bill</span><br><span class="line">0 Cindy</span><br><span class="line">0 Maya</span><br><span class="line">1 John</span><br><span class="line">1 Jack</span><br><span class="line">0 Linda</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Amy Jack</span><br><span class="line">Tom Linda</span><br><span class="line">Bill Maya</span><br><span class="line">Cindy John</span><br></pre></td></tr></table></figure>

<h4 id="个人解题思路-1"><a href="#个人解题思路-1" class="headerlink" title="个人解题思路:"></a>个人解题思路:</h4><p>直接整个结构体,遍历完事,需要注意的是访问过了就不能再次访问了</p>
<p>AC代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span>&#123;</span><br><span class="line">	<span class="type">int</span> sex;<span class="comment">//性别</span></span><br><span class="line">	<span class="type">char</span> name[<span class="number">10</span>];<span class="comment">//姓名</span></span><br><span class="line">	<span class="type">int</span> vi;<span class="comment">//访问标志</span></span><br><span class="line">&#125;stu[<span class="number">50</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%s&quot;</span>,&amp;stu[i].sex,stu[i].name);</span><br><span class="line">		stu[i].vi=<span class="number">0</span>;<span class="comment">//初始化0,默认没有访问过</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n/<span class="number">2</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=n<span class="number">-1</span>;j&gt;=n/<span class="number">2</span>;j--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(stu[j].sex!=stu[i].sex&amp;&amp;stu[j].vi==<span class="number">0</span>)<span class="comment">//性别不一样并且没有访问过</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>,stu[i].name,stu[j].name);</span><br><span class="line">				stu[i].vi=<span class="number">1</span>;<span class="comment">//已经访问过了</span></span><br><span class="line">				stu[j].vi=<span class="number">1</span>;<span class="comment">//已经访问过了</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="出租"><a href="#出租" class="headerlink" title="出租"></a><strong>出租</strong></h3><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805107638517760">原题链接</a></strong></p>
<p>下面是新浪微博上曾经很火的一张图：</p>
<p><img data-src="https://images.ptausercontent.com/187" alt="img"></p>
<p>一时间网上一片求救声，急问这个怎么破。其实这段代码很简单，<code>index</code>数组就是<code>arr</code>数组的下标，<code>index[0]=2</code> 对应 <code>arr[2]=1</code>，<code>index[1]=0</code> 对应 <code>arr[0]=8</code>，<code>index[2]=3</code> 对应 <code>arr[3]=0</code>，以此类推…… 很容易得到电话号码是<code>18013820100</code>。</p>
<p>本题要求你编写一个程序，为任何一个电话号码生成这段代码 —— 事实上，只要生成最前面两行就可以了，后面内容是不变的。</p>
<h4 id="输入格式：-3"><a href="#输入格式：-3" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入在一行中给出一个由11位数字组成的手机号码。</p>
<h4 id="输出格式：-3"><a href="#输出格式：-3" class="headerlink" title="输出格式："></a>输出格式：</h4><p>为输入的号码生成代码的前两行，其中<code>arr</code>中的数字必须按递减顺序给出。</p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18013820100</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int[] arr = new int[]&#123;8,3,2,1,0&#125;;</span><br><span class="line">int[] index = new int[]&#123;3,0,4,3,1,0,2,4,3,4,4&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="个人解题思路-2"><a href="#个人解题思路-2" class="headerlink" title="个人解题思路:"></a>个人解题思路:</h4><p>用数组保存号码中出现过的数字，记得按递减顺序，将号码与该数组进行比较，输出下标即可。</p>
<p>ac代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> data)</span><span class="comment">//查找某个值在数组里的下标</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;arr[i]!=<span class="number">-1</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(arr[i]==data)<span class="keyword">return</span> i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> a[<span class="number">11</span>];</span><br><span class="line">	<span class="type">int</span> visited[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">	<span class="type">int</span> arr[<span class="number">10</span>];</span><br><span class="line">	<span class="type">int</span> index[<span class="number">11</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">11</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		arr[i]=<span class="number">-1</span>;</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;a[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		visited[a[i]-<span class="string">&#x27;0&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">9</span>,j=<span class="number">0</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(visited[i]==<span class="number">1</span>)&#123;</span><br><span class="line">			arr[j]=i;<span class="comment">//将号码出现过的数按递减顺序保存到arr中</span></span><br><span class="line">			j++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;int[] arr = new int[]&#123;&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;arr[i]!=<span class="number">-1</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(arr[i+<span class="number">1</span>]==<span class="number">-1</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,arr[i]);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>,arr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;&#125;;\nint[] index = new int[]&#123;&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;a[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i+<span class="number">1</span>]==<span class="string">&#x27;\0&#x27;</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="built_in">find</span>(arr,a[i]-<span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>,<span class="built_in">find</span>(arr,a[i]-<span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;&#125;;&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="列车调度"><a href="#列车调度" class="headerlink" title="列车调度"></a>列车调度</h3><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805063166312448">原题链接</a></strong></p>
<p>火车站的列车调度铁轨的结构如下图所示。</p>
<p><img data-src="https://images.ptausercontent.com/188" alt="img"></p>
<p>两端分别是一条入口（Entrance）轨道和一条出口（Exit）轨道，它们之间有<code>N</code>条平行的轨道。每趟列车从入口可以选择任意一条轨道进入，最后从出口离开。在图中有9趟列车，在入口处按照{8，4，2，5，3，9，1，6，7}的顺序排队等待进入。如果要求它们必须按序号递减的顺序从出口离开，则至少需要多少条平行铁轨用于调度？</p>
<h4 id="输入格式：-4"><a href="#输入格式：-4" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入第一行给出一个整数<code>N</code> (2 ≤ <code>N</code> ≤105)，下一行给出从1到<code>N</code>的整数序号的一个重排列。数字间以空格分隔。</p>
<h4 id="输出格式：-4"><a href="#输出格式：-4" class="headerlink" title="输出格式："></a>输出格式：</h4><p>在一行中输出可以将输入的列车按序号递减的顺序调离所需要的最少的铁轨条数。</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">8 4 2 5 3 9 1 6 7</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h4 id="个人解题思路-3"><a href="#个人解题思路-3" class="headerlink" title="个人解题思路:"></a>个人解题思路:</h4><p>可以用以下的动态图来得出最少的铁轨条数是4.</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/02/64f9038a4e405451.gif"></p>
<p>要想列车按序号递减的顺序从出口离开，在平行铁轨上的列车必须是有序的，即铁轨上的列车序号必须是递减的。由于题目不需要记录所有的编号，只需要输出最小的铁轨数量，所以只需要记录最小的列车编号即可，而通过观察动图推导出，进入的列车序号只有比每一条铁轨最后的序号大才需要另一条铁轨，比如8，4，2进入一条铁轨，5比2大，只能进入第二条，由这样的规律可以推导出：</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/02/c34aa05a580675fd.gif"></p>
<p>请读者自行模拟其过程</p>
<p>最后可以利用set的lower_bound函数来求解</p>
<p>ac代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; sc;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">        set&lt;<span class="type">int</span>&gt;::iterator it = sc.<span class="built_in">lower_bound</span>(t);<span class="comment">//寻找出比t大的第一个元素</span></span><br><span class="line">        <span class="keyword">if</span>(it!=sc.<span class="built_in">end</span>())<span class="comment">//找得到的话</span></span><br><span class="line">        &#123;</span><br><span class="line">            sc.<span class="built_in">erase</span>(*it);</span><br><span class="line">            sc.<span class="built_in">insert</span>(t);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            sc.<span class="built_in">insert</span>(t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sc.<span class="built_in">size</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>算法</category>
        <category>训练赛</category>
      </categories>
      <tags>
        <tag>算法训练</tag>
        <tag>PTA</tag>
      </tags>
  </entry>
  <entry>
    <title>开发环境配置</title>
    <url>/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="基本开发环境安装脚本"><a href="#基本开发环境安装脚本" class="headerlink" title="基本开发环境安装脚本"></a>基本开发环境安装脚本</h2><h5 id="java"><a href="#java" class="headerlink" title="java"></a>java</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">echo &quot;----------------------uninstall old java -----------------------&quot;</span><br><span class="line">rpm -qa | grep java | xargs rpm -e --nodeps</span><br><span class="line">rpm -qa | grep jdk | xargs rpm -e --nodeps</span><br><span class="line">rpm -qa | grep gcp | xargs rpm -e --nodeps</span><br><span class="line">sed -ie &#x27;/JAVA_HOME/d&#x27; /etc/profile</span><br><span class="line">echo &quot;finished&quot;</span><br><span class="line">echo &quot;---------------start yum install java-1.8.0-openjdk ----------------&quot;</span><br><span class="line">yum install java-1.8.0-openjdk* -y</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; /etc/profile&lt;&lt;EOF</span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/java</span><br><span class="line">export CLASSPATH=.:\$JAVA_HOME/lib/dt.jar:\$JAVA_HOME/lib/tools.jar:\$JAVA_HOME/jre/lib/rt.jar</span><br><span class="line">export PATH=\$PATH:\$JAVA_HOME/bin</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line">java -version</span><br><span class="line"></span><br><span class="line">echo &quot;---------yum install java-1.8.0-openjdk success -----------&quot;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h5 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">echo &quot;-------------------start install nginx -----------------&quot;</span><br><span class="line">yum install -y gcc-c++  </span><br><span class="line">yum install -y openssl openssl--devel</span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y pcre pcre-devel</span><br><span class="line">if [ &#x27;grep &quot;nginx&quot; /etc/passwd | wc -l&#x27; ]; then</span><br><span class="line">echo &quot;adding user nginx&quot;</span><br><span class="line">groupadd nginx</span><br><span class="line">useradd -s /sbin/nologin -M -g nginx nginx</span><br><span class="line">else</span><br><span class="line">echo &quot;user nginx exsits&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;--------------------downloading nginx---------------&quot;</span><br><span class="line">wget http://nginx.org/download/nginx-1.9.5.tar.gz</span><br><span class="line">tar -xvf nginx-1.9.5.tar.gz</span><br><span class="line">cd nginx-1.9.5</span><br><span class="line"></span><br><span class="line">echo &quot;-------------configuring nginx,plz wait-------------&quot;</span><br><span class="line">./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_realip_module --with-http_stub_status_module</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo &quot;configure failed ,please check it out!&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;make nginx, please wait for 20 minutes&quot;</span><br><span class="line">make</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo &quot;make failed ,please check it out!&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;install nginx, please wait for 20 minutes&quot;</span><br><span class="line">make install</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">chown -R nginx.nginx /usr/local/nginx</span><br><span class="line">ln -s /lib64/libpcre.so.0.0.1 /lib64/libpcre.so.1</span><br><span class="line">cp /usr/local/nginx/sbin/nginx /usr/bin</span><br><span class="line">nginx</span><br><span class="line">iptables -I INPUT 3 -s 0.0.0.0/0 -p tcp --dport 80 -j ACCEPT</span><br><span class="line">echo &quot;------------start install nginx success---------------&quot;</span><br></pre></td></tr></table></figure>

<h5 id="mysql5-7"><a href="#mysql5-7" class="headerlink" title="mysql5.7"></a>mysql5.7</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">#下载 提示：本脚本只支持centos 7 安装MySQL版本5.7</span></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">wget https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-5.7/mysql-5.7.36-el7-x86_64.tar.gz</span></span><br><span class="line">REMOVE=`rpm -qa | grep -i mariadb-libs`</span><br><span class="line"><span class="meta">#</span><span class="language-bash">编译</span></span><br><span class="line">yum remove $REMOVE -y</span><br><span class="line">yum install libaio -y</span><br><span class="line"><span class="meta">#</span><span class="language-bash">下载</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-5.7/mysql-5.7.36-el7-x86_64.tar.gz</span><br><span class="line">tar -zxvf mysql-5.7.36-el7-x86_64.tar.gz</span><br><span class="line">mv mysql-5.7.36-el7-x86_64 mysql</span><br><span class="line">mv mysql /usr/local/</span><br><span class="line">useradd -s/sbin/nlogin -M mysql</span><br><span class="line">id mysql</span><br><span class="line">mkdir /usr/local/mysql/&#123;data,log&#125;</span><br><span class="line">chown -R mysql.mysql /usr/local/mysql/</span><br><span class="line"><span class="meta">#</span><span class="language-bash">编辑my.cnf</span></span><br><span class="line">cat &lt;&lt; EOF &gt; /etc/my.cnf</span><br><span class="line">[client]</span><br><span class="line">port = 3295</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"> </span><br><span class="line">[mysqld]</span><br><span class="line">server_id=10</span><br><span class="line">port = 3295</span><br><span class="line">user = mysql</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">default_storage_engine = innodb</span><br><span class="line">log_timestamps = SYSTEM</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">basedir = /usr/local/mysql</span><br><span class="line">datadir = /usr/local/mysql/data/</span><br><span class="line">pid-file = /usr/local/mysql/data/mysql.pid</span><br><span class="line">max_connections = 1000</span><br><span class="line">max_connect_errors = 1000</span><br><span class="line">table_open_cache = 1024</span><br><span class="line">max_allowed_packet = 128M</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">####====================================[innodb]==============================</span></span></span><br><span class="line">innodb_buffer_pool_size = 1024M</span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line">innodb_purge_threads = 2</span><br><span class="line">innodb_flush_log_at_trx_commit = 1</span><br><span class="line">innodb_log_file_size = 512M</span><br><span class="line">innodb_log_files_in_group = 2</span><br><span class="line">innodb_log_buffer_size = 16M</span><br><span class="line">innodb_max_dirty_pages_pct = 80</span><br><span class="line">innodb_lock_wait_timeout = 30</span><br><span class="line">innodb_data_file_path=ibdata1:1024M:autoextend</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">####====================================[log]==============================</span></span></span><br><span class="line">log_error = /usr/local/mysql/log/mysql-error.log </span><br><span class="line">slow_query_log = 1</span><br><span class="line">long_query_time = 1 </span><br><span class="line">slow_query_log_file = /usr/local/mysql/log/mysql-slow.log</span><br><span class="line"> </span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line">EOF</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">编译</span></span><br><span class="line">/usr/local/mysql/bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --innodb_undo_tablespaces=3 --explicit_defaults_for_timestamp</span><br><span class="line"><span class="meta">#</span><span class="language-bash">授权</span></span><br><span class="line">chown -R mysql:mysql /usr/local/mysql</span><br><span class="line">cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql</span><br><span class="line">chmod +x /etc/init.d/mysql</span><br><span class="line">cp /usr/local/mysql/bin/* /usr/local/sbin/</span><br><span class="line">cd /lib/systemd/system</span><br><span class="line">wget http://ftp.zxblinux.com:8082/hjgj/mysql.service</span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># 启动服务并查看</span></span></span><br><span class="line">/etc/init.d/mysql start</span><br><span class="line">netstat -lntup|grep mysql</span><br><span class="line">grep &quot;password&quot; /usr/local/mysql/log/mysql-error.log </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="mysql8-0"><a href="#mysql8-0" class="headerlink" title="mysql8.0"></a>mysql8.0</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/env bash</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">使用</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">去到https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">选中合适的mysql版本并修改脚本中的链接</span></span><br><span class="line"></span><br><span class="line">export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin</span><br><span class="line"></span><br><span class="line">Install_MySQL() &#123;</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">CentOS 8 mysql: error <span class="keyword">while</span> loading shared libraries: libncurses.so.5</span></span><br><span class="line">	yum install ncurses ncurses-compat-libs -y</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Install dependencies</span></span><br><span class="line">	setenforce 0</span><br><span class="line">	yum -y install epel-release</span><br><span class="line">	yum -y install wget tar jemalloc jemalloc-devel gcc gcc-c++</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">MySQL configuration</span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">此处应当进行适当修改</span></span><br><span class="line">	mysql_version=&quot;8.0.26&quot;</span><br><span class="line">	mysql_password=&quot;123456&quot;</span><br><span class="line">	mkdir -p /apps/server/mysql/data</span><br><span class="line">	mysql_install_dir=&quot;/usr/local/mysql&quot;</span><br><span class="line">	mysql_data_dir=&quot;/usr/local/mysql/data&quot;</span><br><span class="line">	download_mysql=&quot;https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Download MySQL</span></span><br><span class="line">	cd /mnt</span><br><span class="line">	useradd -M -s /sbin/nologin mysql &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">	wget -c $&#123;download_mysql&#125;/MySQL-8.0/mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64.tar.xz --no-check-certificate</span><br><span class="line">    echo &quot;========== Start installing MySQL ============&quot;</span><br><span class="line">	tar xJf mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line">	mkdir $&#123;mysql_install_dir&#125;</span><br><span class="line">	mv mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64/* $&#123;mysql_install_dir&#125;/</span><br><span class="line">	</span><br><span class="line">	if [[ -d &quot;$&#123;mysql_install_dir&#125;/support-files&quot; ]]; then</span><br><span class="line">		rm -rf mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64</span><br><span class="line">	else</span><br><span class="line">		rm -rf $&#123;mysql_install_dir&#125;</span><br><span class="line">		echo &quot;Error: MySQL install failed, Please contact the author&quot;</span><br><span class="line">		kill -9 $$</span><br><span class="line">	fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Initialize the database</span></span><br><span class="line"><span class="meta">	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysqld --initialize-insecure --user=mysql --basedir=<span class="variable">$&#123;mysql_install_dir&#125;</span> --datadir=<span class="variable">$&#123;mysql_data_dir&#125;</span></span></span><br><span class="line">	chown -R root . $&#123;mysql_install_dir&#125;</span><br><span class="line">	chown -R mysql.mysql $&#123;mysql_data_dir&#125;</span><br><span class="line">	cp -f $&#123;mysql_install_dir&#125;/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">	sed -i &quot;s@^basedir=.*@basedir=$&#123;mysql_install_dir&#125;@&quot; /etc/init.d/mysqld</span><br><span class="line">	sed -i &quot;s@^datadir=.*@datadir=$&#123;mysql_data_dir&#125;@&quot; /etc/init.d/mysqld</span><br><span class="line">	sed -i &quot;s@/usr/local/mysql@$&#123;mysql_install_dir&#125;@g&quot; $&#123;mysql_install_dir&#125;/bin/mysqld_safe</span><br><span class="line">	sed -i &#x27;s@executing mysqld_safe@executing mysqld_safe\nexport LD_PRELOAD=/usr/lib64/libjemalloc.so@&#x27; $&#123;mysql_install_dir&#125;/bin/mysqld_safe</span><br><span class="line"><span class="meta">	#</span><span class="language-bash">删除配置文件中原有的环境变量</span></span><br><span class="line">	sed -ie &#x27;/MYSQL_HOME/d&#x27; /etc/profile</span><br><span class="line"><span class="meta">	#</span><span class="language-bash">修改mysql的环境变量，直接写入配置文件</span></span><br><span class="line">	echo &quot;export MYSQL_HOME=$&#123;mysql_install_dir&#125;&quot; &gt;&gt;/etc/profile</span><br><span class="line">	echo &quot;export PATH=\$PATH:\$MYSQL_HOME/bin&quot; &gt;&gt;/etc/profile</span><br><span class="line">	source /etc/profile</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">my.conf configuration</span></span><br><span class="line">	cat &gt; /etc/my.cnf &lt;&lt; EOF</span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt=&quot;MySQL [\\d]&gt; &quot;</span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default_authentication_plugin = mysql_native_password</span><br><span class="line"></span><br><span class="line">basedir = $&#123;mysql_install_dir&#125;</span><br><span class="line">datadir = $&#123;mysql_data_dir&#125;</span><br><span class="line">pid-file = $&#123;mysql_data_dir&#125;/mysql.pid</span><br><span class="line">user = mysql</span><br><span class="line">bind-address = 0.0.0.0</span><br><span class="line">server-id = 1</span><br><span class="line"></span><br><span class="line">init-connect = &#x27;SET NAMES utf8mb4&#x27;</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">collation-server = utf8mb4_0900_ai_ci</span><br><span class="line"></span><br><span class="line">skip-name-resolve</span><br><span class="line"><span class="meta">#</span><span class="language-bash">skip-networking</span></span><br><span class="line">back_log = 300</span><br><span class="line"></span><br><span class="line">max_connections = 1000</span><br><span class="line">max_connect_errors = 6000</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">table_open_cache = 128</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line">binlog_cache_size = 1M</span><br><span class="line">max_heap_table_size = 8M</span><br><span class="line">tmp_table_size = 16M</span><br><span class="line"></span><br><span class="line">read_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">join_buffer_size = 8M</span><br><span class="line">key_buffer_size = 4M</span><br><span class="line"></span><br><span class="line">thread_cache_size = 8</span><br><span class="line"></span><br><span class="line">ft_min_word_len = 4</span><br><span class="line"></span><br><span class="line">log_bin = mysql-bin</span><br><span class="line">binlog_format = mixed</span><br><span class="line">binlog_expire_logs_seconds = 604800</span><br><span class="line"></span><br><span class="line">log_error = $&#123;mysql_data_dir&#125;/mysql-error.log</span><br><span class="line">slow_query_log = 1</span><br><span class="line">long_query_time = 1</span><br><span class="line">slow_query_log_file = $&#123;mysql_data_dir&#125;/mysql-slow.log</span><br><span class="line"></span><br><span class="line">performance_schema = 0</span><br><span class="line">explicit_defaults_for_timestamp</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">lower_case_table_names = 1</span></span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line"><span class="meta">#</span><span class="language-bash">default-storage-engine = MyISAM</span></span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line">innodb_open_files = 500</span><br><span class="line">innodb_buffer_pool_size = 64M</span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line">innodb_thread_concurrency = 0</span><br><span class="line">innodb_purge_threads = 1</span><br><span class="line">innodb_flush_log_at_trx_commit = 2</span><br><span class="line">innodb_log_buffer_size = 2M</span><br><span class="line">innodb_log_file_size = 32M</span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line">innodb_max_dirty_pages_pct = 90</span><br><span class="line">innodb_lock_wait_timeout = 120</span><br><span class="line"></span><br><span class="line">bulk_insert_buffer_size = 8M</span><br><span class="line">myisam_sort_buffer_size = 8M</span><br><span class="line">myisam_max_sort_file_size = 10G</span><br><span class="line">myisam_repair_threads = 1</span><br><span class="line"></span><br><span class="line">interactive_timeout = 28800</span><br><span class="line">wait_timeout = 28800</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">read_buffer = 4M</span><br><span class="line">write_buffer = 4M</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Set up MySQL</span></span><br><span class="line">	chmod 600 /etc/my.cnf</span><br><span class="line">	chmod +x /etc/init.d/mysqld</span><br><span class="line">	cp /etc/init.d/mysqld /usr/bin</span><br><span class="line">	systemctl enable mysqld</span><br><span class="line">  	systemctl start mysqld</span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;create user root@&#x27;127.0.0.1&#x27; identified by \&quot;<span class="variable">$&#123;mysql_password&#125;</span>\&quot;;&quot;</span></span></span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;grant all privileges on *.* to root@&#x27;127.0.0.1&#x27; with grant option;&quot;</span></span></span><br><span class="line"><span class="meta"> 	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;grant all privileges on *.* to root@&#x27;localhost&#x27; with grant option;&quot;</span></span></span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;alter user root@&#x27;localhost&#x27; identified by \&quot;<span class="variable">$&#123;mysql_password&#125;</span>\&quot;;&quot;</span></span></span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -p<span class="variable">$&#123;mysql_password&#125;</span> -e <span class="string">&quot;reset master;&quot;</span></span></span><br><span class="line">  	rm -rf /etc/ld.so.conf.d/&#123;mysql,mariadb,percona,alisql&#125;*.conf</span><br><span class="line">  	echo &quot;$&#123;mysql_install_dir&#125;/lib&quot; &gt; /etc/ld.so.conf.d/mysql_renwole.com.conf</span><br><span class="line">  	ldconfig</span><br><span class="line">  	echo &quot;========== MySQL installing Successfully =====&quot;</span><br><span class="line">	echo &quot;MySQL:&quot;</span><br><span class="line">	echo &quot;account: root&quot;</span><br><span class="line">	echo &quot;password: $&#123;mysql_password&#125;&quot;</span><br><span class="line">	echo &quot;database: $&#123;mysql_data_dir&#125;&quot;</span><br><span class="line">	echo &quot;==============================================&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Install_MySQL</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<h5 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!bin/sh</span></span><br><span class="line"></span><br><span class="line">cd ~</span><br><span class="line">FILE=/root/redis-5.0.8.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">判断文件是否存在</span></span><br><span class="line">if test -f &quot;$FILE&quot;; then</span><br><span class="line">    echo &quot;$FILE exist&quot;</span><br><span class="line">	else</span><br><span class="line">		wget http://download.redis.io/releases/redis-5.0.8.tar.gz</span><br><span class="line">fi</span><br><span class="line"><span class="meta"># </span><span class="language-bash">解压安装包</span></span><br><span class="line">tar -zxvf redis-5.0.8.tar.gz</span><br><span class="line"><span class="meta"># </span><span class="language-bash">重命名</span></span><br><span class="line">mv redis-5.0.8 redis</span><br><span class="line"><span class="meta"># </span><span class="language-bash">移动文件</span></span><br><span class="line">mv -f redis /usr/local/redis</span><br><span class="line"></span><br><span class="line">cd /usr/local/redis</span><br><span class="line">make MALLOC=lib</span><br><span class="line">make install</span><br><span class="line">cp -rf /root/redis.conf /usr/local/redis</span><br><span class="line"></span><br><span class="line">cd /etc/init.d</span><br><span class="line">touch redis</span><br><span class="line">chmod 777 redis</span><br><span class="line">cat &lt;&lt; EOF &gt; redis</span><br><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">chkconfig: 22345 10 90</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">description: Start and Stop redis</span></span><br><span class="line">REDISPORT=6354</span><br><span class="line">EXEC=/usr/local/redis/src/redis-server</span><br><span class="line">CLIEXEC=/usr/local/redis/src/redis-cli</span><br><span class="line">PIDFILE=/var/run/redis.pid</span><br><span class="line">CONF=&quot;/usr/local/redis/redis.conf&quot;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">    start)</span><br><span class="line">        if [ -f $PIDFILE ];then</span><br><span class="line">            echo &quot;$PIDFILE exists,process is already running or crashed&quot;</span><br><span class="line">        else</span><br><span class="line">            echo &quot;Starting Redis server...&quot;</span><br><span class="line">            $EXEC $CONF</span><br><span class="line">        fi</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        if [ ! -f $PIDFILE ];then</span><br><span class="line">            echo &quot;$PIDFILE does not exist,process is not running&quot;</span><br><span class="line">        else</span><br><span class="line">            PID=$(cat $PIDFILE)</span><br><span class="line">            echo &quot;Stopping...&quot;</span><br><span class="line">        fi</span><br><span class="line">        ;;</span><br><span class="line">    restart)</span><br><span class="line">        &quot;$0&quot; stop</span><br><span class="line">        sleep 3</span><br><span class="line">        &quot;$0&quot; start</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        echo &quot;Please use start or stop or restart as first argument&quot;</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">chkconfig --add redis</span><br><span class="line">chkconfig --list redis</span><br><span class="line"></span><br><span class="line">/usr/local/redis/src/redis-server /usr/local/redis/redis.conf</span><br></pre></td></tr></table></figure>

<h2 id="往期文章"><a href="#往期文章" class="headerlink" title="往期文章"></a>往期文章</h2><p><strong><a href="/Linux%E3%80%81Shell%E4%BB%8B%E7%BB%8D/" title="Linux、Shell介绍">Linux、Shell介绍</a></strong></p>
<p><strong><a href="/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" title="开发环境配置">开发环境配置</a></strong></p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>玩转服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转STL</title>
    <url>/%E7%8E%A9%E8%BD%ACSTL/</url>
    <content><![CDATA[<p>(￣▽￣)～■□～(￣▽￣)</p>
<p>记录C++的STL库</p>
<h5 id="专栏目录"><a href="#专栏目录" class="headerlink" title="专栏目录"></a>专栏目录</h5><h5 id=""><a href="#" class="headerlink" title=""></a><a href="/STL%E5%AE%B9%E5%99%A8-set/" title="STL容器-set">STL容器-set</a></h5>]]></content>
      <categories>
        <category>专栏</category>
        <category>数据结构</category>
        <category>STL</category>
      </categories>
      <tags>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转服务器</title>
    <url>/%E7%8E%A9%E8%BD%AC%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>(￣▽￣)～■□～(￣▽￣)</p>
<p>记录如何部署Web程序到服务器</p>
<h2 id="专栏目录"><a href="#专栏目录" class="headerlink" title="专栏目录"></a>专栏目录</h2><h5 id=""><a href="#" class="headerlink" title=""></a><a href="/Linux%E3%80%81Shell%E4%BB%8B%E7%BB%8D/" title="Linux、Shell介绍">Linux、Shell介绍</a></h5><h5 id="-1"><a href="#-1" class="headerlink" title=""></a><a href="/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" title="开发环境配置">开发环境配置</a></h5>]]></content>
      <categories>
        <category>专栏</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>玩转服务器</tag>
      </tags>
  </entry>
</search>
